@page "/registerExpense"

@using SharedModels.Models
@using SharedModels.Models.RequestModels;
@using SharedModels.Models.ViewModels;
@using SharpExpenses.Services.Contracts;
@using System.ComponentModel.DataAnnotations;

@inherits BaseComponent

<PageTitle>Registrar gasto</PageTitle>

<div id="header"></div>
<div class="container">
    <h1>Informacion del gasto</h1>

    <EditForm Model="@_newExpense" OnValidSubmit="@HandleValidSubmit" class="shadow p-3 mb-5 rounded">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Type">Tipo de gasto</label>
        <InputSelect id="Type" @bind-Value="_newExpense.Type" class="form-control">
            <option value="@Expense.Types.Personal">Personal</option>
            <option value="@Expense.Types.Buissines">Trabajo</option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="Importance">Necesidad</label>
        <InputSelect id="Importance" @bind-Value="_newExpense.Importance" class="form-control">
            <option value="@Expense.ImportanceCategories.Essential"> Esensial </option>
            <option value="@Expense.ImportanceCategories.NonEssential"> No esensial </option>
            <option value="@Expense.ImportanceCategories.Luxury"> Lujo </option>
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="Category">Categoria</label>
        <InputSelect id="Category" @bind-Value="_newExpense.CategoryId" class="form-control">
            @foreach(var category in this._categories)
            {
                <option value="@category.ExpenseCategoryId"> @category.ExpenseCategoryName </option>
            }
        </InputSelect>
    </div>

    <div class="form-group">
        <label for="AmountSpent">Cantidad gastada</label>
        <InputNumber id="AmountSpent" min="0.1" step="0.1" @bind-Value="_newExpense.AmountSpent" class="form-control" />
    </div>

    <div class="form-group">
        <label for="Date">Fecha y hora</label>
        <RadzenDatePicker ShowTime="true" HourFormat="12" id="Date" @bind-Value="_newExpense.Date" class="form-control" />
    </div>

    <div class="form-group">
            <label for="Description">Descripcion</label>
            <InputTextArea id="Description" @bind-Value="_newExpense.Description" class="form-control" />
    </div>

    <button disabled="@( !this._isInitialized )" type="submit" class="btn btn-primary">Registrar</button>
</EditForm>
</div>

@code {
    private ExpenseRequest _newExpense = null!; // is initialized in the first line of OnInitializedAsync override
    private List<ExpenseCategory> _categories = new List<ExpenseCategory>();
    private bool _isInitialized { get; set; }  = false;

    [Inject]
    public IExpensesService ExpensesService { get; set; } = null!;
    [Inject]
    public IExpenseCategoriesService ExpenseCategoriesService { get; set; } = null!;

    private async Task HandleValidSubmit()
    {
        try
        {
            await this.ExpensesService.Create(this._newExpense);
            this.ShowNotification("Gasto registrado exitosamente", NotificationSeverity.Success);
        }
        catch (Exception ex)
        {
            this.ShowNotification($"Error inesperado: {ex.Message}", NotificationSeverity.Error);
            this.ReloadPage();
        }
        this.InitializeNewExpense();
    }

    protected override async Task OnInitializedAsync()
    {
        this.InitializeNewExpense();
        this._categories = await this.ExpenseCategoriesService.ReadAll();
        this._isInitialized = true;
    }

    private void InitializeNewExpense()
    {
        this._newExpense = new ExpenseRequest()
        {
                CategoryId = 0,
                AmountSpent = 0.1M,
                Date = DateTime.Now
        };
    }
}

