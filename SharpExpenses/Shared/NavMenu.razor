@inject CustomAuthStateProvider AuthenticationStateProvider;
@inject NavigationManager UriHelper;

<AuthorizeView>
    <Authorized>
        <div class="top-row ps-3 navbar navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="">SharpExpenses</a>
                <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </div>

        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"></span> Administrar Gastos
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="registerExpense">
                        <span class="oi oi-plus" aria-hidden="true"></span> Registrar Gasto
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/profitsViwer">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Visor de ganancias
                    </NavLink>
                </div>
            </nav>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        this.AuthenticationStateProvider.AuthenticationStateChanged += HandleAuthenticationStateChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void HandleAuthenticationStateChanged(Task<AuthenticationState> authenticationState)
    {
        this.UriHelper.NavigateTo(this.UriHelper.Uri, forceLoad: true);
    }



    public void Dispose()
    {
        this.AuthenticationStateProvider.AuthenticationStateChanged -= HandleAuthenticationStateChanged;
    }
}
