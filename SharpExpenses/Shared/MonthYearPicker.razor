@using System.Globalization;
@code {
    [Parameter]
    public DateTime SelectedDate { get; set; }

    [Parameter]
    public EventCallback<DateTime> SelectedDateChanged { get; set; }

    private int selectedYear;
    private int selectedMonth;

    protected override void OnParametersSet()
    {
        selectedYear = SelectedDate.Year;
        selectedMonth = SelectedDate.Month;
    }

    private async Task OnYearChanged(ChangeEventArgs e)
    {
        selectedYear = Convert.ToInt32(e.Value);
        await UpdateDate();
    }

    private async Task OnMonthChanged(ChangeEventArgs e)
    {
        selectedMonth = Convert.ToInt32(e.Value);
        await UpdateDate();
    }

    private async Task UpdateDate()
    {
        SelectedDate = new DateTime(selectedYear, selectedMonth, 1);
        await SelectedDateChanged.InvokeAsync(SelectedDate);
    }
}

<div>
    <input type="number" value="@selectedYear" @oninput="OnYearChanged" min="1900" max="5099" step="1" />
    <select value="@selectedMonth" @onchange="OnMonthChanged">
        @for (int i = 1; i <= 12; i++)
        {
            <option value="@i">@DateTimeFormatInfo.CurrentInfo.GetMonthName(i)</option>
        }
    </select>
</div>
